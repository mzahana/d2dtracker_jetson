# Dockerfile for setting up d2dtracker dependecies

ARG BASE_IMAGE
FROM ${BASE_IMAGE}

#
# Setup XRCE-DDS Agent & Client
#
RUN git clone https://github.com/eProsima/Micro-XRCE-DDS-Agent.git && \
    cd Micro-XRCE-DDS-Agent && \
    mkdir build && \
    cd build && \
    cmake .. && \
    make && \
    make install && \
    ldconfig /usr/local/lib/

#
# Install yolov8 dependencies
# 
# RUN pip3 install ultralytics

# Downloads to user config dir
ADD https://ultralytics.com/assets/Arial.ttf https://ultralytics.com/assets/Arial.Unicode.ttf /home/admin/.config/Ultralytics/
# Create working directory
RUN mkdir -p /usr/src/ultralytics

# Copy contents
# COPY . /usr/src/app  (issues as not a .git directory)
RUN git clone https://github.com/ultralytics/ultralytics /usr/src/ultralytics
ADD https://github.com/ultralytics/assets/releases/download/v0.0.0/yolov8n.pt /usr/src/ultralytics/
COPY scripts/requirements.txt /usr/src/ultralytics/requirements.txt

# Install pip packages manually for TensorRT compatibility https://github.com/NVIDIA/TensorRT/issues/2567
RUN pip install --no-cache tqdm matplotlib pyyaml psutil pandas onnx thop "numpy==1.23"
RUN cd /usr/src/ultralytics \
    && pip install --no-cache -e .

# Set environment variables
ENV OMP_NUM_THREADS=1

# Install some tools
RUN apt update && apt install -y bash-completion \
    nano \
    && apt-get -y autoremove \
	&& apt-get clean autoclean \
	&& rm -rf /var/lib/apt/lists/{apt,dpkg,cache,log} /tmp/* /var/tmp/*

COPY libs/nvToolsExt.h /usr/local/cuda-11.4/targets/aarch64-linux/include/nvToolsExt.h
COPY libs/libnvToolsExt.so /usr/local/cuda-11.4/targets/aarch64-linux/lib/libnvToolsExt.so

# Copy scripts
RUN echo "copying entrypoint script..."
RUN mkdir -p /usr/local/bin/scripts
COPY scripts/modified-workspace-entrypoint.sh /usr/local/bin/scripts/
RUN  chmod +x /usr/local/bin/scripts/*.sh

COPY scripts/libcusparse.so.11 /usr/local/cuda-11.4/targets/aarch64-linux/lib/libcusparse.so.11
COPY scripts/cusparse.h /usr/local/cuda-11.4/targets/aarch64-linux/include/cusparse.h

# RUN cd /home/${USERNAME} && touch .bashrc
# RUN sudo chown -R ${USERNAME}:${USERNAME} /home/${USERNAME}/

CMD ["/bin/bash"]
